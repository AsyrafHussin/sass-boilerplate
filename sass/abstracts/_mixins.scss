// center block elemet
//  p{
//    @include push--auto;
// }
@mixin push--auto {
    margin: { 
        left: auto;
        right: auto
    }
}

//  when using ::before and ::after
//  div::after {
//    @include pseudo;
//    top: -1rem; left: -1rem;
//    width: 1rem; height: 1rem;
//  }
@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}        

// create scalable elements (usually images / background images) that maintain a ratio.
// div {
//    @include responsive-ratio(16,9);
// }
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

// font style (size,color,font-weight,line-height)
// p{
//    @include font-source-sans(16px,#fff,400,10px);
// }
@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
    font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
    @if $size { font-size: $size; }
    @if $colour { color: $colour; }
    @if $weight { font-weight: $weight; }
    @if $lh { line-height: $lh; }
}

// style input placeholder
// input,  
//textarea {  
//    @include input-placeholder {
//        color: $grey;
//    }
// }
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

// breakpoint
// .something {
//    padding: 100px;
//    @include breakpoint(small) {
//        padding: 10px;
//    }
// }
@mixin breakpoint($point)       {
    @if $point == retina {
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { @content; }
    }
    @if $point == xxlarge {
        @media (min-width: 1921px) { @content; }
    }
    @if $point == xlarge {
        @media (min-width: 1600px) { @content; }
    }
    @if $point == large {
        @media (min-width: 1441px) { @content; }
    }
    @else if $point == regular-screen {
        @media (min-width: 1200px) { @content; }
    }
    @else if $point ==  medium {
        @media (min-width: 1024px)  { @content; }
    }
    @else if $point ==  landscape {
        @media (min-width: 1024px)  { @content; }
    }
    @else if $point ==  smaller-screen {
        @media (min-width: 800px)  { @content; }
    }
    @else if $point ==  portrait {
        @media (min-width: 768px)  { @content; }
    }
    @else if $point ==  small {
        @media (min-width: 640px)  { @content; }
    }
    @else if $point ==  large-mobile {
        @media (min-width: 480px)  { @content; }
    }
    @else if $point ==  mobile {
        @media (min-width: 360px)  { @content; }
    }
} 

// truncate text to be in a single straight line 
// p{
//    @include truncate(250px);
// }
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// unselectable element
// input{
//    @include unselectable;
// }
@mixin unselectable {
    -webkit-touch-callout: none;
    user-select: none;
}

// black-and-white and color to filter image
// .my-image {
//    @include black-and-white;
// }
@mixin black-and-white {
    filter: grayscale(100%);
}

// .my-image {
//        &:hover {
//            @include color;
//        }
// }
@mixin color {
    filter: grayscale(0%);
}

// no bullet for list
// ul{
//   @include no-bullets;
// }
@mixin no-bullets {
    list-style: none;
}

// no margin no padding
// div{
//   @include no-margin-padding;
// }
@mixin no-margin-padding {
        margin: 0;
        padding: 0;
}

// animation
// @include keyframes(slide-down) {
//  0% { opacity: 1; }
//  90% { opacity: 0; }
// }
// .element {
//  width: 100px;
//  height: 100px;
//  background: black;
//  @include animation('slide-down 5s 3');
// }
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

// transitions
// a {
//  color: gray;
//  @include transition(color .3s ease);
//  &:hover {
//    color: black;
//  }
// }
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}


// box-shadow
// div {
//  width: 50px
//  height: 50px;
//  @include box-shadow(10px 10px 5px 0px rgba(0,0,0,0.75));
// }
@mixin box-shadow($input: 0) {
    -webkit-box-shadow: $input;
    -moz-box-shadow: $input;
    box-shadow: $input;
}


// box-sizing
// *, *:before, *:after {
//  @include box-sizing()
// }
@mixin box-sizing($string: border-box) {
    -webkit-box-sizing: $string;
    -moz-box-sizing: $string;
    -ms-box-sizing: $string;
    -o-box-sizing: $string;
    box-sizing: $string;
}

// clearfix - use for clear after or before float: left or right
// div {
//  @include clearfix()
// }
@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin optional-at-root($sel) {
    @at-root #{if(not &, $sel, selector-append(&, $sel))} {
        @content;
    }
}

// placeholder
// input {
//  @include placeholder {
//      color: black;
//  }
// }
@mixin placeholder {
    @include optional-at-root('::-webkit-input-placeholder') {
        @content;
    }
    @include optional-at-root(':-moz-placeholder') {
        @content;
    }
    @include optional-at-root('::-moz-placeholder') {
        @content;
    }
    @include optional-at-root(':-ms-input-placeholder') {
        @content;
    }
}



